version: '3.8'

services:

  vpn_bot_web:
    container_name: vpn_bot_web
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn abridge_bot.wsgi:application --bind :8080
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8080
    env_file:
      - ./.env.prod
    depends_on:
      - vpn_bot_db
      - vpn_bot_redis
  
  vpn_bot:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    container_name: vpn_bot
    command: python run_pooling.py
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    env_file:
      - ./.env.prod
    depends_on:
      - vpn_bot_web
      - vpn_bot_redis 
      - vpn_bot_db
  
  vpn_bot_db:
    container_name: vpn_bot_db
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
  
  vpn_bot_redis:
    image: redis:alpine
    container_name: vpn_bot_redis
    volumes:
      - ./redis_data:/data
  
  vpn_bot_celery:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    container_name: vpn_bot_celery
    command: celery -A abridge_bot worker --loglevel=INFO
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    env_file:
      - ./.env.prod
    depends_on:
      - vpn_bot_redis
      - vpn_bot_web
      
  vpn_bot_celery-beat:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    container_name: vpn_bot_beat
    command: celery -A abridge_bot beat -l info --scheduler django_celery_beat.schedulers.DatabaseScheduler
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    env_file:
      - ./.env.prod
    depends_on:
      - vpn_bot_redis
      - vpn_bot_celery
      - vpn_bot_web

  vpn_bot_nginx:
    container_name: vpn_bot_nginx
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 8081:8081
    depends_on:
      - vpn_bot_web

#networks:
#  default:
#    name: nginxproxymanager_default
#    external: true

volumes:
  postgres_data:
  static_volume:
  media_volume:
